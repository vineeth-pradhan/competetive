package competetive;

import competetive.Solution;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;

class SolutionTest {
  @Test
  void test(){
    assertEquals(new Solution().intToRoman(1),"I");
    assertEquals(new Solution().intToRoman(2),"II");
    assertEquals(new Solution().intToRoman(3),"III");
    assertEquals(new Solution().intToRoman(4),"IV");
    assertEquals(new Solution().intToRoman(5),"V");
    assertEquals(new Solution().intToRoman(6),"VI");
    assertEquals(new Solution().intToRoman(7),"VII");
    assertEquals(new Solution().intToRoman(8),"VIII");
    assertEquals(new Solution().intToRoman(9),"IX");
    assertEquals(new Solution().intToRoman(10),"X");
    assertEquals(new Solution().intToRoman(11),"XI");
    assertEquals(new Solution().intToRoman(12),"XII");
    assertEquals(new Solution().intToRoman(13),"XIII");
    assertEquals(new Solution().intToRoman(14),"XIV");
    assertEquals(new Solution().intToRoman(15),"XV");
    assertEquals(new Solution().intToRoman(16),"XVI");
    assertEquals(new Solution().intToRoman(17),"XVII");
    assertEquals(new Solution().intToRoman(18),"XVIII");
    assertEquals(new Solution().intToRoman(19),"XIX");
    assertEquals(new Solution().intToRoman(20),"XX");
    assertEquals(new Solution().intToRoman(21),"XXI");
    assertEquals(new Solution().intToRoman(22),"XXII");
    assertEquals(new Solution().intToRoman(23),"XXIII");
    assertEquals(new Solution().intToRoman(24),"XXIV");
    assertEquals(new Solution().intToRoman(25),"XXV");
    assertEquals(new Solution().intToRoman(26),"XXVI");
    assertEquals(new Solution().intToRoman(27),"XXVII");
    assertEquals(new Solution().intToRoman(28),"XXVIII");
    assertEquals(new Solution().intToRoman(29),"XXIX");
    assertEquals(new Solution().intToRoman(30),"XXX");
    assertEquals(new Solution().intToRoman(31),"XXXI");
    assertEquals(new Solution().intToRoman(32),"XXXII");
    assertEquals(new Solution().intToRoman(33),"XXXIII");
    assertEquals(new Solution().intToRoman(34),"XXXIV");
    assertEquals(new Solution().intToRoman(35),"XXXV");
    assertEquals(new Solution().intToRoman(36),"XXXVI");
    assertEquals(new Solution().intToRoman(37),"XXXVII");
    assertEquals(new Solution().intToRoman(38),"XXXVIII");
    assertEquals(new Solution().intToRoman(39),"XXXIX");
    assertEquals(new Solution().intToRoman(40),"XL");
    assertEquals(new Solution().intToRoman(41),"XLI");
    assertEquals(new Solution().intToRoman(42),"XLII");
    assertEquals(new Solution().intToRoman(43),"XLIII");
    assertEquals(new Solution().intToRoman(44),"XLIV");
    assertEquals(new Solution().intToRoman(45),"XLV");
    assertEquals(new Solution().intToRoman(46),"XLVI");
    assertEquals(new Solution().intToRoman(47),"XLVII");
    assertEquals(new Solution().intToRoman(48),"XLVIII");
    assertEquals(new Solution().intToRoman(49),"XLIX");
    assertEquals(new Solution().intToRoman(50),"L");
    assertEquals(new Solution().intToRoman(51),"LI");
    assertEquals(new Solution().intToRoman(52),"LII");
    assertEquals(new Solution().intToRoman(53),"LIII");
    assertEquals(new Solution().intToRoman(54),"LIV");
    assertEquals(new Solution().intToRoman(55),"LV");
    assertEquals(new Solution().intToRoman(56),"LVI");
    assertEquals(new Solution().intToRoman(57),"LVII");
    assertEquals(new Solution().intToRoman(58),"LVIII");
    assertEquals(new Solution().intToRoman(59),"LIX");
    assertEquals(new Solution().intToRoman(60),"LX");
    assertEquals(new Solution().intToRoman(61),"LXI");
    assertEquals(new Solution().intToRoman(62),"LXII");
    assertEquals(new Solution().intToRoman(63),"LXIII");
    assertEquals(new Solution().intToRoman(64),"LXIV");
    assertEquals(new Solution().intToRoman(65),"LXV");
    assertEquals(new Solution().intToRoman(66),"LXVI");
    assertEquals(new Solution().intToRoman(67),"LXVII");
    assertEquals(new Solution().intToRoman(68),"LXVIII");
    assertEquals(new Solution().intToRoman(69),"LXIX");
    assertEquals(new Solution().intToRoman(70),"LXX");
    assertEquals(new Solution().intToRoman(71),"LXXI");
    assertEquals(new Solution().intToRoman(72),"LXXII");
    assertEquals(new Solution().intToRoman(73),"LXXIII");
    assertEquals(new Solution().intToRoman(74),"LXXIV");
    assertEquals(new Solution().intToRoman(75),"LXXV");
    assertEquals(new Solution().intToRoman(76),"LXXVI");
    assertEquals(new Solution().intToRoman(77),"LXXVII");
    assertEquals(new Solution().intToRoman(78),"LXXVIII");
    assertEquals(new Solution().intToRoman(79),"LXXIX");
    assertEquals(new Solution().intToRoman(80),"LXXX");
    assertEquals(new Solution().intToRoman(81),"LXXXI");
    assertEquals(new Solution().intToRoman(82),"LXXXII");
    assertEquals(new Solution().intToRoman(83),"LXXXIII");
    assertEquals(new Solution().intToRoman(84),"LXXXIV");
    assertEquals(new Solution().intToRoman(85),"LXXXV");
    assertEquals(new Solution().intToRoman(86),"LXXXVI");
    assertEquals(new Solution().intToRoman(87),"LXXXVII");
    assertEquals(new Solution().intToRoman(88),"LXXXVIII");
    assertEquals(new Solution().intToRoman(89),"LXXXIX");
    assertEquals(new Solution().intToRoman(90),"XC");
    assertEquals(new Solution().intToRoman(91),"XCI");
    assertEquals(new Solution().intToRoman(92),"XCII");
    assertEquals(new Solution().intToRoman(93),"XCIII");
    assertEquals(new Solution().intToRoman(94),"XCIV");
    assertEquals(new Solution().intToRoman(95),"XCV");
    assertEquals(new Solution().intToRoman(96),"XCVI");
    assertEquals(new Solution().intToRoman(97),"XCVII");
    assertEquals(new Solution().intToRoman(98),"XCVIII");
    assertEquals(new Solution().intToRoman(99),"XCIX");
    assertEquals(new Solution().intToRoman(100),"C");
    assertEquals(new Solution().intToRoman(101),"CI");
    assertEquals(new Solution().intToRoman(102),"CII");
    assertEquals(new Solution().intToRoman(103),"CIII");
    assertEquals(new Solution().intToRoman(104),"CIV");
    assertEquals(new Solution().intToRoman(105),"CV");
    assertEquals(new Solution().intToRoman(106),"CVI");
    assertEquals(new Solution().intToRoman(107),"CVII");
    assertEquals(new Solution().intToRoman(108),"CVIII");
    assertEquals(new Solution().intToRoman(109),"CIX");
    assertEquals(new Solution().intToRoman(110),"CX");
    assertEquals(new Solution().intToRoman(111),"CXI");
    assertEquals(new Solution().intToRoman(112),"CXII");
    assertEquals(new Solution().intToRoman(113),"CXIII");
    assertEquals(new Solution().intToRoman(114),"CXIV");
    assertEquals(new Solution().intToRoman(115),"CXV");
    assertEquals(new Solution().intToRoman(116),"CXVI");
    assertEquals(new Solution().intToRoman(117),"CXVII");
    assertEquals(new Solution().intToRoman(118),"CXVIII");
    assertEquals(new Solution().intToRoman(119),"CXIX");
    assertEquals(new Solution().intToRoman(120),"CXX");
    assertEquals(new Solution().intToRoman(121),"CXXI");
    assertEquals(new Solution().intToRoman(122),"CXXII");
    assertEquals(new Solution().intToRoman(123),"CXXIII");
    assertEquals(new Solution().intToRoman(124),"CXXIV");
    assertEquals(new Solution().intToRoman(125),"CXXV");
    assertEquals(new Solution().intToRoman(126),"CXXVI");
    assertEquals(new Solution().intToRoman(127),"CXXVII");
    assertEquals(new Solution().intToRoman(128),"CXXVIII");
    assertEquals(new Solution().intToRoman(129),"CXXIX");
    assertEquals(new Solution().intToRoman(130),"CXXX");
    assertEquals(new Solution().intToRoman(131),"CXXXI");
    assertEquals(new Solution().intToRoman(132),"CXXXII");
    assertEquals(new Solution().intToRoman(133),"CXXXIII");
    assertEquals(new Solution().intToRoman(134),"CXXXIV");
    assertEquals(new Solution().intToRoman(135),"CXXXV");
    assertEquals(new Solution().intToRoman(136),"CXXXVI");
    assertEquals(new Solution().intToRoman(137),"CXXXVII");
    assertEquals(new Solution().intToRoman(138),"CXXXVIII");
    assertEquals(new Solution().intToRoman(139),"CXXXIX");
    assertEquals(new Solution().intToRoman(140),"CXL");
    assertEquals(new Solution().intToRoman(141),"CXLI");
    assertEquals(new Solution().intToRoman(142),"CXLII");
    assertEquals(new Solution().intToRoman(143),"CXLIII");
    assertEquals(new Solution().intToRoman(144),"CXLIV");
    assertEquals(new Solution().intToRoman(145),"CXLV");
    assertEquals(new Solution().intToRoman(146),"CXLVI");
    assertEquals(new Solution().intToRoman(147),"CXLVII");
    assertEquals(new Solution().intToRoman(148),"CXLVIII");
    assertEquals(new Solution().intToRoman(149),"CXLIX");
    assertEquals(new Solution().intToRoman(150),"CL");
    assertEquals(new Solution().intToRoman(151),"CLI");
    assertEquals(new Solution().intToRoman(152),"CLII");
    assertEquals(new Solution().intToRoman(153),"CLIII");
    assertEquals(new Solution().intToRoman(154),"CLIV");
    assertEquals(new Solution().intToRoman(155),"CLV");
    assertEquals(new Solution().intToRoman(156),"CLVI");
    assertEquals(new Solution().intToRoman(157),"CLVII");
    assertEquals(new Solution().intToRoman(158),"CLVIII");
    assertEquals(new Solution().intToRoman(159),"CLIX");
    assertEquals(new Solution().intToRoman(160),"CLX");
    assertEquals(new Solution().intToRoman(161),"CLXI");
    assertEquals(new Solution().intToRoman(162),"CLXII");
    assertEquals(new Solution().intToRoman(163),"CLXIII");
    assertEquals(new Solution().intToRoman(164),"CLXIV");
    assertEquals(new Solution().intToRoman(165),"CLXV");
    assertEquals(new Solution().intToRoman(166),"CLXVI");
    assertEquals(new Solution().intToRoman(167),"CLXVII");
    assertEquals(new Solution().intToRoman(168),"CLXVIII");
    assertEquals(new Solution().intToRoman(169),"CLXIX");
    assertEquals(new Solution().intToRoman(170),"CLXX");
    assertEquals(new Solution().intToRoman(171),"CLXXI");
    assertEquals(new Solution().intToRoman(172),"CLXXII");
    assertEquals(new Solution().intToRoman(173),"CLXXIII");
    assertEquals(new Solution().intToRoman(174),"CLXXIV");
    assertEquals(new Solution().intToRoman(175),"CLXXV");
    assertEquals(new Solution().intToRoman(176),"CLXXVI");
    assertEquals(new Solution().intToRoman(177),"CLXXVII");
    assertEquals(new Solution().intToRoman(178),"CLXXVIII");
    assertEquals(new Solution().intToRoman(179),"CLXXIX");
    assertEquals(new Solution().intToRoman(180),"CLXXX");
    assertEquals(new Solution().intToRoman(181),"CLXXXI");
    assertEquals(new Solution().intToRoman(182),"CLXXXII");
    assertEquals(new Solution().intToRoman(183),"CLXXXIII");
    assertEquals(new Solution().intToRoman(184),"CLXXXIV");
    assertEquals(new Solution().intToRoman(185),"CLXXXV");
    assertEquals(new Solution().intToRoman(186),"CLXXXVI");
    assertEquals(new Solution().intToRoman(187),"CLXXXVII");
    assertEquals(new Solution().intToRoman(188),"CLXXXVIII");
    assertEquals(new Solution().intToRoman(189),"CLXXXIX");
    assertEquals(new Solution().intToRoman(190),"CXC");
    assertEquals(new Solution().intToRoman(191),"CXCI");
    assertEquals(new Solution().intToRoman(192),"CXCII");
    assertEquals(new Solution().intToRoman(193),"CXCIII");
    assertEquals(new Solution().intToRoman(194),"CXCIV");
    assertEquals(new Solution().intToRoman(195),"CXCV");
    assertEquals(new Solution().intToRoman(196),"CXCVI");
    assertEquals(new Solution().intToRoman(197),"CXCVII");
    assertEquals(new Solution().intToRoman(198),"CXCVIII");
    assertEquals(new Solution().intToRoman(199),"CXCIX");
    assertEquals(new Solution().intToRoman(200),"CC");
    assertEquals(new Solution().intToRoman(201),"CCI");
    assertEquals(new Solution().intToRoman(202),"CCII");
    assertEquals(new Solution().intToRoman(203),"CCIII");
    assertEquals(new Solution().intToRoman(204),"CCIV");
    assertEquals(new Solution().intToRoman(205),"CCV");
    assertEquals(new Solution().intToRoman(206),"CCVI");
    assertEquals(new Solution().intToRoman(207),"CCVII");
    assertEquals(new Solution().intToRoman(208),"CCVIII");
    assertEquals(new Solution().intToRoman(209),"CCIX");
    assertEquals(new Solution().intToRoman(210),"CCX");
    assertEquals(new Solution().intToRoman(211),"CCXI");
    assertEquals(new Solution().intToRoman(212),"CCXII");
    assertEquals(new Solution().intToRoman(213),"CCXIII");
    assertEquals(new Solution().intToRoman(214),"CCXIV");
    assertEquals(new Solution().intToRoman(215),"CCXV");
    assertEquals(new Solution().intToRoman(216),"CCXVI");
    assertEquals(new Solution().intToRoman(217),"CCXVII");
    assertEquals(new Solution().intToRoman(218),"CCXVIII");
    assertEquals(new Solution().intToRoman(219),"CCXIX");
    assertEquals(new Solution().intToRoman(220),"CCXX");
    assertEquals(new Solution().intToRoman(221),"CCXXI");
    assertEquals(new Solution().intToRoman(222),"CCXXII");
    assertEquals(new Solution().intToRoman(223),"CCXXIII");
    assertEquals(new Solution().intToRoman(224),"CCXXIV");
    assertEquals(new Solution().intToRoman(225),"CCXXV");
    assertEquals(new Solution().intToRoman(226),"CCXXVI");
    assertEquals(new Solution().intToRoman(227),"CCXXVII");
    assertEquals(new Solution().intToRoman(228),"CCXXVIII");
    assertEquals(new Solution().intToRoman(229),"CCXXIX");
    assertEquals(new Solution().intToRoman(230),"CCXXX");
    assertEquals(new Solution().intToRoman(231),"CCXXXI");
    assertEquals(new Solution().intToRoman(232),"CCXXXII");
    assertEquals(new Solution().intToRoman(233),"CCXXXIII");
    assertEquals(new Solution().intToRoman(234),"CCXXXIV");
    assertEquals(new Solution().intToRoman(235),"CCXXXV");
    assertEquals(new Solution().intToRoman(236),"CCXXXVI");
    assertEquals(new Solution().intToRoman(237),"CCXXXVII");
    assertEquals(new Solution().intToRoman(238),"CCXXXVIII");
    assertEquals(new Solution().intToRoman(239),"CCXXXIX");
    assertEquals(new Solution().intToRoman(240),"CCXL");
    assertEquals(new Solution().intToRoman(241),"CCXLI");
    assertEquals(new Solution().intToRoman(242),"CCXLII");
    assertEquals(new Solution().intToRoman(243),"CCXLIII");
    assertEquals(new Solution().intToRoman(244),"CCXLIV");
    assertEquals(new Solution().intToRoman(245),"CCXLV");
    assertEquals(new Solution().intToRoman(246),"CCXLVI");
    assertEquals(new Solution().intToRoman(247),"CCXLVII");
    assertEquals(new Solution().intToRoman(248),"CCXLVIII");
    assertEquals(new Solution().intToRoman(249),"CCXLIX");
    assertEquals(new Solution().intToRoman(250),"CCL");
    assertEquals(new Solution().intToRoman(251),"CCLI");
    assertEquals(new Solution().intToRoman(252),"CCLII");
    assertEquals(new Solution().intToRoman(253),"CCLIII");
    assertEquals(new Solution().intToRoman(254),"CCLIV");
    assertEquals(new Solution().intToRoman(255),"CCLV");
    assertEquals(new Solution().intToRoman(256),"CCLVI");
    assertEquals(new Solution().intToRoman(257),"CCLVII");
    assertEquals(new Solution().intToRoman(258),"CCLVIII");
    assertEquals(new Solution().intToRoman(259),"CCLIX");
    assertEquals(new Solution().intToRoman(260),"CCLX");
    assertEquals(new Solution().intToRoman(261),"CCLXI");
    assertEquals(new Solution().intToRoman(262),"CCLXII");
    assertEquals(new Solution().intToRoman(263),"CCLXIII");
    assertEquals(new Solution().intToRoman(264),"CCLXIV");
    assertEquals(new Solution().intToRoman(265),"CCLXV");
    assertEquals(new Solution().intToRoman(266),"CCLXVI");
    assertEquals(new Solution().intToRoman(267),"CCLXVII");
    assertEquals(new Solution().intToRoman(268),"CCLXVIII");
    assertEquals(new Solution().intToRoman(269),"CCLXIX");
    assertEquals(new Solution().intToRoman(270),"CCLXX");
    assertEquals(new Solution().intToRoman(271),"CCLXXI");
    assertEquals(new Solution().intToRoman(272),"CCLXXII");
    assertEquals(new Solution().intToRoman(273),"CCLXXIII");
    assertEquals(new Solution().intToRoman(274),"CCLXXIV");
    assertEquals(new Solution().intToRoman(275),"CCLXXV");
    assertEquals(new Solution().intToRoman(276),"CCLXXVI");
    assertEquals(new Solution().intToRoman(277),"CCLXXVII");
    assertEquals(new Solution().intToRoman(278),"CCLXXVIII");
    assertEquals(new Solution().intToRoman(279),"CCLXXIX");
    assertEquals(new Solution().intToRoman(280),"CCLXXX");
    assertEquals(new Solution().intToRoman(281),"CCLXXXI");
    assertEquals(new Solution().intToRoman(282),"CCLXXXII");
    assertEquals(new Solution().intToRoman(283),"CCLXXXIII");
    assertEquals(new Solution().intToRoman(284),"CCLXXXIV");
    assertEquals(new Solution().intToRoman(285),"CCLXXXV");
    assertEquals(new Solution().intToRoman(286),"CCLXXXVI");
    assertEquals(new Solution().intToRoman(287),"CCLXXXVII");
    assertEquals(new Solution().intToRoman(288),"CCLXXXVIII");
    assertEquals(new Solution().intToRoman(289),"CCLXXXIX");
    assertEquals(new Solution().intToRoman(290),"CCXC");
    assertEquals(new Solution().intToRoman(291),"CCXCI");
    assertEquals(new Solution().intToRoman(292),"CCXCII");
    assertEquals(new Solution().intToRoman(293),"CCXCIII");
    assertEquals(new Solution().intToRoman(294),"CCXCIV");
    assertEquals(new Solution().intToRoman(295),"CCXCV");
    assertEquals(new Solution().intToRoman(296),"CCXCVI");
    assertEquals(new Solution().intToRoman(297),"CCXCVII");
    assertEquals(new Solution().intToRoman(298),"CCXCVIII");
    assertEquals(new Solution().intToRoman(299),"CCXCIX");
    assertEquals(new Solution().intToRoman(300),"CCC");
    assertEquals(new Solution().intToRoman(301),"CCCI");
    assertEquals(new Solution().intToRoman(302),"CCCII");
    assertEquals(new Solution().intToRoman(303),"CCCIII");
    assertEquals(new Solution().intToRoman(304),"CCCIV");
    assertEquals(new Solution().intToRoman(305),"CCCV");
    assertEquals(new Solution().intToRoman(306),"CCCVI");
    assertEquals(new Solution().intToRoman(307),"CCCVII");
    assertEquals(new Solution().intToRoman(308),"CCCVIII");
    assertEquals(new Solution().intToRoman(309),"CCCIX");
    assertEquals(new Solution().intToRoman(310),"CCCX");
    assertEquals(new Solution().intToRoman(311),"CCCXI");
    assertEquals(new Solution().intToRoman(312),"CCCXII");
    assertEquals(new Solution().intToRoman(313),"CCCXIII");
    assertEquals(new Solution().intToRoman(314),"CCCXIV");
    assertEquals(new Solution().intToRoman(315),"CCCXV");
    assertEquals(new Solution().intToRoman(316),"CCCXVI");
    assertEquals(new Solution().intToRoman(317),"CCCXVII");
    assertEquals(new Solution().intToRoman(318),"CCCXVIII");
    assertEquals(new Solution().intToRoman(319),"CCCXIX");
    assertEquals(new Solution().intToRoman(320),"CCCXX");
    assertEquals(new Solution().intToRoman(321),"CCCXXI");
    assertEquals(new Solution().intToRoman(322),"CCCXXII");
    assertEquals(new Solution().intToRoman(323),"CCCXXIII");
    assertEquals(new Solution().intToRoman(324),"CCCXXIV");
    assertEquals(new Solution().intToRoman(325),"CCCXXV");
    assertEquals(new Solution().intToRoman(326),"CCCXXVI");
    assertEquals(new Solution().intToRoman(327),"CCCXXVII");
    assertEquals(new Solution().intToRoman(328),"CCCXXVIII");
    assertEquals(new Solution().intToRoman(329),"CCCXXIX");
    assertEquals(new Solution().intToRoman(330),"CCCXXX");
    assertEquals(new Solution().intToRoman(331),"CCCXXXI");
    assertEquals(new Solution().intToRoman(332),"CCCXXXII");
    assertEquals(new Solution().intToRoman(333),"CCCXXXIII");
    assertEquals(new Solution().intToRoman(334),"CCCXXXIV");
    assertEquals(new Solution().intToRoman(335),"CCCXXXV");
    assertEquals(new Solution().intToRoman(336),"CCCXXXVI");
    assertEquals(new Solution().intToRoman(337),"CCCXXXVII");
    assertEquals(new Solution().intToRoman(338),"CCCXXXVIII");
    assertEquals(new Solution().intToRoman(339),"CCCXXXIX");
    assertEquals(new Solution().intToRoman(340),"CCCXL");
    assertEquals(new Solution().intToRoman(341),"CCCXLI");
    assertEquals(new Solution().intToRoman(342),"CCCXLII");
    assertEquals(new Solution().intToRoman(343),"CCCXLIII");
    assertEquals(new Solution().intToRoman(344),"CCCXLIV");
    assertEquals(new Solution().intToRoman(345),"CCCXLV");
    assertEquals(new Solution().intToRoman(346),"CCCXLVI");
    assertEquals(new Solution().intToRoman(347),"CCCXLVII");
    assertEquals(new Solution().intToRoman(348),"CCCXLVIII");
    assertEquals(new Solution().intToRoman(349),"CCCXLIX");
    assertEquals(new Solution().intToRoman(350),"CCCL");
    assertEquals(new Solution().intToRoman(351),"CCCLI");
    assertEquals(new Solution().intToRoman(352),"CCCLII");
    assertEquals(new Solution().intToRoman(353),"CCCLIII");
    assertEquals(new Solution().intToRoman(354),"CCCLIV");
    assertEquals(new Solution().intToRoman(355),"CCCLV");
    assertEquals(new Solution().intToRoman(356),"CCCLVI");
    assertEquals(new Solution().intToRoman(357),"CCCLVII");
    assertEquals(new Solution().intToRoman(358),"CCCLVIII");
    assertEquals(new Solution().intToRoman(359),"CCCLIX");
    assertEquals(new Solution().intToRoman(360),"CCCLX");
    assertEquals(new Solution().intToRoman(361),"CCCLXI");
    assertEquals(new Solution().intToRoman(362),"CCCLXII");
    assertEquals(new Solution().intToRoman(363),"CCCLXIII");
    assertEquals(new Solution().intToRoman(364),"CCCLXIV");
    assertEquals(new Solution().intToRoman(365),"CCCLXV");
    assertEquals(new Solution().intToRoman(366),"CCCLXVI");
    assertEquals(new Solution().intToRoman(367),"CCCLXVII");
    assertEquals(new Solution().intToRoman(368),"CCCLXVIII");
    assertEquals(new Solution().intToRoman(369),"CCCLXIX");
    assertEquals(new Solution().intToRoman(370),"CCCLXX");
    assertEquals(new Solution().intToRoman(371),"CCCLXXI");
    assertEquals(new Solution().intToRoman(372),"CCCLXXII");
    assertEquals(new Solution().intToRoman(373),"CCCLXXIII");
    assertEquals(new Solution().intToRoman(374),"CCCLXXIV");
    assertEquals(new Solution().intToRoman(375),"CCCLXXV");
    assertEquals(new Solution().intToRoman(376),"CCCLXXVI");
    assertEquals(new Solution().intToRoman(377),"CCCLXXVII");
    assertEquals(new Solution().intToRoman(378),"CCCLXXVIII");
    assertEquals(new Solution().intToRoman(379),"CCCLXXIX");
    assertEquals(new Solution().intToRoman(380),"CCCLXXX");
    assertEquals(new Solution().intToRoman(381),"CCCLXXXI");
    assertEquals(new Solution().intToRoman(382),"CCCLXXXII");
    assertEquals(new Solution().intToRoman(383),"CCCLXXXIII");
    assertEquals(new Solution().intToRoman(384),"CCCLXXXIV");
    assertEquals(new Solution().intToRoman(385),"CCCLXXXV");
    assertEquals(new Solution().intToRoman(386),"CCCLXXXVI");
    assertEquals(new Solution().intToRoman(387),"CCCLXXXVII");
    assertEquals(new Solution().intToRoman(388),"CCCLXXXVIII");
    assertEquals(new Solution().intToRoman(389),"CCCLXXXIX");
    assertEquals(new Solution().intToRoman(390),"CCCXC");
    assertEquals(new Solution().intToRoman(391),"CCCXCI");
    assertEquals(new Solution().intToRoman(392),"CCCXCII");
    assertEquals(new Solution().intToRoman(393),"CCCXCIII");
    assertEquals(new Solution().intToRoman(394),"CCCXCIV");
    assertEquals(new Solution().intToRoman(395),"CCCXCV");
    assertEquals(new Solution().intToRoman(396),"CCCXCVI");
    assertEquals(new Solution().intToRoman(397),"CCCXCVII");
    assertEquals(new Solution().intToRoman(398),"CCCXCVIII");
    assertEquals(new Solution().intToRoman(399),"CCCXCIX");
    assertEquals(new Solution().intToRoman(400),"CD");
    assertEquals(new Solution().intToRoman(401),"CDI");
    assertEquals(new Solution().intToRoman(402),"CDII");
    assertEquals(new Solution().intToRoman(403),"CDIII");
    assertEquals(new Solution().intToRoman(404),"CDIV");
    assertEquals(new Solution().intToRoman(405),"CDV");
    assertEquals(new Solution().intToRoman(406),"CDVI");
    assertEquals(new Solution().intToRoman(407),"CDVII");
    assertEquals(new Solution().intToRoman(408),"CDVIII");
    assertEquals(new Solution().intToRoman(409),"CDIX");
    assertEquals(new Solution().intToRoman(410),"CDX");
    assertEquals(new Solution().intToRoman(411),"CDXI");
    assertEquals(new Solution().intToRoman(412),"CDXII");
    assertEquals(new Solution().intToRoman(413),"CDXIII");
    assertEquals(new Solution().intToRoman(414),"CDXIV");
    assertEquals(new Solution().intToRoman(415),"CDXV");
    assertEquals(new Solution().intToRoman(416),"CDXVI");
    assertEquals(new Solution().intToRoman(417),"CDXVII");
    assertEquals(new Solution().intToRoman(418),"CDXVIII");
    assertEquals(new Solution().intToRoman(419),"CDXIX");
    assertEquals(new Solution().intToRoman(420),"CDXX");
    assertEquals(new Solution().intToRoman(421),"CDXXI");
    assertEquals(new Solution().intToRoman(422),"CDXXII");
    assertEquals(new Solution().intToRoman(423),"CDXXIII");
    assertEquals(new Solution().intToRoman(424),"CDXXIV");
    assertEquals(new Solution().intToRoman(425),"CDXXV");
    assertEquals(new Solution().intToRoman(426),"CDXXVI");
    assertEquals(new Solution().intToRoman(427),"CDXXVII");
    assertEquals(new Solution().intToRoman(428),"CDXXVIII");
    assertEquals(new Solution().intToRoman(429),"CDXXIX");
    assertEquals(new Solution().intToRoman(430),"CDXXX");
    assertEquals(new Solution().intToRoman(431),"CDXXXI");
    assertEquals(new Solution().intToRoman(432),"CDXXXII");
    assertEquals(new Solution().intToRoman(433),"CDXXXIII");
    assertEquals(new Solution().intToRoman(434),"CDXXXIV");
    assertEquals(new Solution().intToRoman(435),"CDXXXV");
    assertEquals(new Solution().intToRoman(436),"CDXXXVI");
    assertEquals(new Solution().intToRoman(437),"CDXXXVII");
    assertEquals(new Solution().intToRoman(438),"CDXXXVIII");
    assertEquals(new Solution().intToRoman(439),"CDXXXIX");
    assertEquals(new Solution().intToRoman(440),"CDXL");
    assertEquals(new Solution().intToRoman(441),"CDXLI");
    assertEquals(new Solution().intToRoman(442),"CDXLII");
    assertEquals(new Solution().intToRoman(443),"CDXLIII");
    assertEquals(new Solution().intToRoman(444),"CDXLIV");
    assertEquals(new Solution().intToRoman(445),"CDXLV");
    assertEquals(new Solution().intToRoman(446),"CDXLVI");
    assertEquals(new Solution().intToRoman(447),"CDXLVII");
    assertEquals(new Solution().intToRoman(448),"CDXLVIII");
    assertEquals(new Solution().intToRoman(449),"CDXLIX");
    assertEquals(new Solution().intToRoman(450),"CDL");
    assertEquals(new Solution().intToRoman(451),"CDLI");
    assertEquals(new Solution().intToRoman(452),"CDLII");
    assertEquals(new Solution().intToRoman(453),"CDLIII");
    assertEquals(new Solution().intToRoman(454),"CDLIV");
    assertEquals(new Solution().intToRoman(455),"CDLV");
    assertEquals(new Solution().intToRoman(456),"CDLVI");
    assertEquals(new Solution().intToRoman(457),"CDLVII");
    assertEquals(new Solution().intToRoman(458),"CDLVIII");
    assertEquals(new Solution().intToRoman(459),"CDLIX");
    assertEquals(new Solution().intToRoman(460),"CDLX");
    assertEquals(new Solution().intToRoman(461),"CDLXI");
    assertEquals(new Solution().intToRoman(462),"CDLXII");
    assertEquals(new Solution().intToRoman(463),"CDLXIII");
    assertEquals(new Solution().intToRoman(464),"CDLXIV");
    assertEquals(new Solution().intToRoman(465),"CDLXV");
    assertEquals(new Solution().intToRoman(466),"CDLXVI");
    assertEquals(new Solution().intToRoman(467),"CDLXVII");
    assertEquals(new Solution().intToRoman(468),"CDLXVIII");
    assertEquals(new Solution().intToRoman(469),"CDLXIX");
    assertEquals(new Solution().intToRoman(470),"CDLXX");
    assertEquals(new Solution().intToRoman(471),"CDLXXI");
    assertEquals(new Solution().intToRoman(472),"CDLXXII");
    assertEquals(new Solution().intToRoman(473),"CDLXXIII");
    assertEquals(new Solution().intToRoman(474),"CDLXXIV");
    assertEquals(new Solution().intToRoman(475),"CDLXXV");
    assertEquals(new Solution().intToRoman(476),"CDLXXVI");
    assertEquals(new Solution().intToRoman(477),"CDLXXVII");
    assertEquals(new Solution().intToRoman(478),"CDLXXVIII");
    assertEquals(new Solution().intToRoman(479),"CDLXXIX");
    assertEquals(new Solution().intToRoman(480),"CDLXXX");
    assertEquals(new Solution().intToRoman(481),"CDLXXXI");
    assertEquals(new Solution().intToRoman(482),"CDLXXXII");
    assertEquals(new Solution().intToRoman(483),"CDLXXXIII");
    assertEquals(new Solution().intToRoman(484),"CDLXXXIV");
    assertEquals(new Solution().intToRoman(485),"CDLXXXV");
    assertEquals(new Solution().intToRoman(486),"CDLXXXVI");
    assertEquals(new Solution().intToRoman(487),"CDLXXXVII");
    assertEquals(new Solution().intToRoman(488),"CDLXXXVIII");
    assertEquals(new Solution().intToRoman(489),"CDLXXXIX");
    assertEquals(new Solution().intToRoman(490),"CDXC");
    assertEquals(new Solution().intToRoman(491),"CDXCI");
    assertEquals(new Solution().intToRoman(492),"CDXCII");
    assertEquals(new Solution().intToRoman(493),"CDXCIII");
    assertEquals(new Solution().intToRoman(494),"CDXCIV");
    assertEquals(new Solution().intToRoman(495),"CDXCV");
    assertEquals(new Solution().intToRoman(496),"CDXCVI");
    assertEquals(new Solution().intToRoman(497),"CDXCVII");
    assertEquals(new Solution().intToRoman(498),"CDXCVIII");
    assertEquals(new Solution().intToRoman(499),"CDXCIX");
    assertEquals(new Solution().intToRoman(500),"D");
  }
}
